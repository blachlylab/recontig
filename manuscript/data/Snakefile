
ensemble_link = "http://ftp.ensembl.org/pub/release-104/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.toplevel.fa.gz"
gencode_link = "http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/GRCh38.p13.genome.fa.gz"
ucsc_link = "https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz"
ncbi_link = "https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh38_latest/refseq_identifiers/GRCh38_latest_genomic.fna.gz"

DBS = ["UCSC", "gencode", "NCBI", "ensembl"]

def get_link(wildcards):
    if wildcards.org == "UCSC":
        return ucsc_link
    elif wildcards.org == "gencode":
        return gencode_link
    elif wildcards.org == "NCBI":
        return ncbi_link
    elif wildcards.org == "ensembl":
        return ensemble_link
    else:
        assert(0)

methods = ["recontig_mappings", "re_mappings", "re_complex_mappings", "checksum_mappings"]

rule all:
    input:
        mappings = ["{}/{}_2_{}.mapping.txt".format(x, y, z) for x in methods for y in DBS for z in DBS if y != z],
        

rule download_fasta:
    output: "fastas/{org}.grch38.fasta"
    params:
        link = lambda wildcards: get_link(wildcards)
    conda: "conda.yml"
    shell: "wget -O - {params.link} | gzip -d > {output}"

rule faidx:
    input:"fastas/{org}.grch38.fasta"
    output: "fastas/{org}.grch38.fasta.fai"
    conda: "conda.yml"
    shell: "samtools faidx {input}"

rule recontig_make_mapping:
    input:
        src="fastas/{src}.grch38.fasta",
        srcfai="fastas/{src}.grch38.fasta.fai",
        dest="fastas/{dest}.grch38.fasta",
        destfai="fastas/{dest}.grch38.fasta.fai"
    output:"recontig_mappings/{src}_2_{dest}.mapping.txt"
    shell: "../../recontig make-mapping {input.src} {input.dest} > {output}"

rule regex_make_mapping_naive:
    input:
        srcfai="fastas/{src}.grch38.fasta.fai",
        destfai="fastas/{dest}.grch38.fasta.fai"
    output:"re_mappings/{src}_2_{dest}.mapping.txt"
    conda: "conda.yml"
    shell: "python convert_fai.py {input.srcfai} {input.destfai} > {output}"

rule regex_make_mapping_complex:
    input:
        src="fastas/{src}.grch38.fasta",
        srcfai="fastas/{src}.grch38.fasta.fai",
        dest="fastas/{dest}.grch38.fasta",
        destfai="fastas/{dest}.grch38.fasta.fai"
    output:"re_complex_mappings/{src}_2_{dest}.mapping.txt"
    conda: "conda.yml"
    shell: "python convert_fai.py -c {input.srcfai} {input.destfai} > {output}"

rule checksum_make_mapping_naive:
    input:
        src="fastas/{src}.grch38.fasta",
        srcfai="fastas/{src}.grch38.fasta.fai",
        dest="fastas/{dest}.grch38.fasta",
        destfai="fastas/{dest}.grch38.fasta.fai"
    output:"checksum_mappings/{src}_2_{dest}.mapping.txt"
    conda: "conda.yml"
    shell: "python md5sum_contigs.py {input.src} {input.dest} > {output}"
